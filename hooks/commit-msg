#!/usr/bin/env python
# -*- coding: utf-8 -*-
import re
import sys
import os

types = """
* 🎉 new              A new repo
* 💥 BREAKING CHANGE  A breaking API change - SemVar MAJOR
* ✨ feat             A new feature - SemVar MINOR
* 🐛 fix              A bug fix - SemVar PATCH
* 🗑️  revert           Revert a commit
* 🛠️  build            Change to build system
* ♻️  chore            Change to tooling/config/!src/!test
* ⚙️  ci               Change to CI pipeline/workflow
* 📚 docs             Change to documentation only
* 🚀 perf             Change that affects performance
* 📦 refactor         Change not related to a bug or feat
* 💎 style            Change to style (whitespace, etc.)
* 🚨 test             Change that adds/modifies tests
"""


def main():
    emojies = {
        "new": "🎉",
        "build": "🛠",
        "ci": "⚙️",
        "docs": "📚",
        "feat": "✨",
        "fix": "🐛",
        "perf": "🚀",
        "refactor": "📦",
        "style": "💎",
        "test": "🚨",
        "chore": "♻️",
        "revert": "🗑",
        "breaking": "💥",
        "wip": "🚧",
    }
    pattern = r"({})(\([\w\-]+\))?!?:\s.*".format("|".join(emojies.keys()))
    filename = sys.argv[1]
    ss = open(filename, "r").read()
    header = [line for line in ss.splitlines() if not line.startswith("# ")][0]
    if re.match(pattern, header) is None:
        print("\nCommit header `", header, "` does not follow conventional commit specification.")
        print("\n", types)
        print("\nhttps://www.conventionalcommits.org/\n")
        sys.exit(1)
    else:
        commitPrefix = header.split(":")[0]
        commitPostfix = header.split(":")[1]
        if "BREAKING CHANGE" in ss and not commitPrefix.endswith("!"):
            commitPrefix = commitPrefix + "!"
        commitEmoji = ""
        if os.getenv("CONVENTIONAL_COMMITS_PRECOMMIT_NOEMOJI", "false") != "true":
            if commitPrefix.endswith("!") and emojies["breaking"] not in header:
                commitEmoji = commitEmoji + " " + emojies["breaking"]
            if "(" in commitPrefix:
                e = emojies.get(commitPrefix.rstrip("!").split("(")[0], "")
            else:
                e = emojies.get(commitPrefix.rstrip("!"), "")
            if e not in header:
                commitEmoji = commitEmoji + " " + e
        else:
            commitEmoji = ""
        new_header = commitPrefix + ":" + commitPostfix + commitEmoji
        if new_header.strip() != header.strip():
            commit_msg = ss.replace(header, new_header)
            with open(filename, "w") as f:
                f.write(commit_msg)


if __name__ == "__main__":
    main()
